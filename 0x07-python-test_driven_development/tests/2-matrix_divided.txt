# 2-matrix_divided.py

==============================
How to use 2-matrix_divided.py
==============================

Tests to perform include:
1.) Test for all matrix items to integers or floats
2.) Test to confirm the lists in the matrix list are the same size
3.) Test to confirm if div is an integer, float or equal to 0
4.) Test to confirm division function of the module
5.) Test to confirm if new list returned

Importing the function 'matrix divided'

	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Basic use of module functionality:
	
	>>> matrix = [[1, 2, 3], [4, 5, 6]]
	>>> print(matrix_divided(matrix, 3))
	[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Test for non integers or float inputs in lists of matrix:

    >>> matrix = [['c', 'k', 'l'], ['b', 5, 6]]
    >>> print(matrix_divided(matrix, 3))
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Test for Zero "div" input:
    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> print(matrix_divided(matrix, 0))
    Traceback (most recent call last):
    ...
    ZeroDivisionError: division by zero

Test for different list length in matrix input:
    >>> matrix = [[1, 2, 3], [4, 5, 6, 7, 8, 9]]
    >>> print(matrix_divided(matrix, 2))
    Traceback (most recent call last):
    ...
    TypeError: Each row of the matrix must have the same size

Test for negative variables in list inputs:
    >>> matrix = [[1, 2, -3], [4, 5, -6]]
    >>> print(matrix_divided(matrix, 2))
    [[0.5, 1.0, -1.5], [2.0, 2.5, -3.0]]

Test for an empty matrix as input:
    >>> matrix = [[]]
    >>> print(matrix_divided(matrix, 2))
    [[]]

Test for no input:
    >>> print(matrix_divided())
    Traceback (most recent call last):
    ...
    TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'
